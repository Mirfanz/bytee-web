// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum roles {
  user
  member
  admin
}

model User {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  image          String?
  email          String  @unique
  hashedPassword String
  apiKey         String? @unique @default(cuid())
  role           roles   @default(user)

  verifiedAt      DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  devices         Device[]
  rooms           Room[]
  notifications   Notification[]
}

type relay {
  name   String?
  status Boolean @default(false)
}

model Device {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  userId      String  @db.ObjectId
  roomId      String  @db.ObjectId
  relay1      relay   
  relay2      relay

  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id],onDelete: Cascade)
  room Room @relation(fields: [roomId], references: [id],onDelete: Cascade)
}

model Room {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  userId      String  @db.ObjectId
  name        String
  description String?

  createdAt DateTime @default(now())

  devices Device[]
  user    User     @relation(fields: [userId], references: [id],onDelete: Cascade)
}

enum statusNotification {
  info
  warning
  error
  success
}

model Notification {
  id          String  @id @default(auto()) @db.ObjectId @map("_id")
  userId      String?  @db.ObjectId

  title       String  
  message     String
  status      statusNotification
  url         String?

  createdAt   DateTime  @default(now())

  user        User?   @relation(fields: [userId],references: [id], onDelete: Cascade)
}